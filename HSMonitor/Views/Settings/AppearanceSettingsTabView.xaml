<UserControl x:Class="HSMonitor.Views.Settings.AppearanceSettingsTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:settings="clr-namespace:HSMonitor.ViewModels.Settings"
             xmlns:converters="clr-namespace:HSMonitor.Utils.Converters"
             xmlns:validationRules="clr-namespace:HSMonitor.Utils.ValidationRules"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DataContext="{d:DesignInstance Type=settings:AppearanceSettingsTabViewModel}"
             Style="{DynamicResource MaterialDesignRoot}"
             mc:Ignorable="d"
             Background="Transparent">
    <UserControl.Resources>
        <Style
            TargetType="{x:Type ComboBox}"
            BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter
                Property="HorizontalAlignment"
                Value="Right"/>
            <Setter
                Property="VerticalAlignment"
                Value="Center"/>
            <Setter
                Property="HorizontalContentAlignment"
                Value="Center"/>
            <Setter
                Property="VerticalContentAlignment"
                Value="Center"/>
            <Setter
                Property="Width"
                Value="80"/>
            <Setter
                Property="Margin"
                Value="8 ,0, 0, 0"/>
        </Style>
        <Style
            TargetType="{x:Type TextBlock}"
            BasedOn="{StaticResource MaterialDesignTextBlock}">
            <Setter
                Property="Margin"
                Value="0, 0, 0, 2"/>
        </Style>
        <Style
            TargetType="{x:Type TextBox}"
            BasedOn="{StaticResource MaterialDesignTextBox}">
            <Setter
                Property="Margin"
                Value="0, 2"/>
            <Setter
                Property="HorizontalAlignment"
                Value="Stretch"/>
            <Setter
                Property="VerticalAlignment"
                Value="Center"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="materialDesign:ValidationAssist.UsePopup" Value="True" />
                    <Setter Property="materialDesign:ValidationAssist.PopupPlacement" Value="Bottom" />
                    <Setter Property="materialDesign:ValidationAssist.Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            TargetType="{x:Type ToggleButton}"
            BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter
                Property="Margin"
                Value="8, 0, 0, 0"/>
            <Setter
                Property="HorizontalAlignment"
                Value="Right"/>
            <Setter
                Property="VerticalAlignment"
                Value="Center"/>
        </Style>
        <Style
            TargetType="{x:Type Grid}">
            <Setter
                Property="IsEnabled"
                Value="{Binding IsAutoDetectHardwareEnabled,Converter={x:Static converters:InverseBoolConverter.Instance}}"/>
        </Style>
    </UserControl.Resources>
    <StackPanel
        Margin="0, 8"
        Orientation="Vertical">
        <!--On/Off autodetect hardware-->
        <Grid 
            Margin="12,4" 
            ToolTip="On/Off autodetect hardware"
            IsEnabled="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock
                Grid.Column="0"
                VerticalAlignment="Center"
                Text="Autodetect Hardware" />
            <ToggleButton
                Grid.Column="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                IsChecked="{Binding IsAutoDetectHardwareEnabled}" />
        </Grid>
        <!--Set custom CPU name-->
        <Grid
            Margin="12, 4">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto"/>
                <RowDefinition
                    Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock
                Text="Custom CPU name:"
                VerticalAlignment="Center"/>
            <TextBox
                x:Name="CpuNameTextBox"
                Grid.Row="1"
                TextAlignment="Left">
                <TextBox.Text>
                    <Binding Path="CpuCustomName"
                             UpdateSourceTrigger="PropertyChanged" 
                             Mode="TwoWay">
                        <Binding.ValidationRules>
                            <validationRules:HardwareNameLengthRule 
                                Max="23"
                                ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <!--Set custom GPU name-->
        <Grid
            Margin="12, 4">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto"/>
                <RowDefinition
                    Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock
                Text="Custom GPU name:"
                VerticalAlignment="Center"/>
            <TextBox
                x:Name="GpuNameTextBox"
                Grid.Row="1"
                TextAlignment="Left" >
                <TextBox.Text>
                    <Binding Path="GpuCustomName"
                             UpdateSourceTrigger="PropertyChanged" 
                             Mode="TwoWay">
                        <Binding.ValidationRules>
                            <validationRules:HardwareNameLengthRule 
                                Max="23"
                                ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <!-- Select custom CPU Type -->
        <Grid
            Margin="12, 4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="Auto"/>
                <ColumnDefinition
                    Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock
                Text="CPU icon:"
                VerticalAlignment="Center"/>
            <ComboBox
                x:Name="CpuCustomTypesComboBox"
                Grid.Column="1"
                ItemsSource="{Binding CpuCustomTypes}"
                SelectedValue="{Binding CpuCustomType, Mode=TwoWay}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock
                            Text="{Binding }"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>
        <!-- Select custom GPU Type -->
        <Grid
            Margin="12, 4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="Auto"/>
                <ColumnDefinition
                    Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock
                Text="GPU icon:"
                VerticalAlignment="Center"/>
            <ComboBox
                x:Name="GpuCustomTypesComboBox"
                Grid.Column="1"
                ItemsSource="{Binding GpuCustomTypes}"
                SelectedValue="{Binding GpuCustomType, Mode=TwoWay}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock
                            Text="{Binding }"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>
        <!-- Select custom Memory Type -->
        <Grid
            Margin="12, 4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="Auto"/>
                <ColumnDefinition
                    Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock
                Text="Ram icon:"
                VerticalAlignment="Center"/>
            <ComboBox
                x:Name="MemoryCustomTypesComboBox"
                Grid.Column="1"
                ItemsSource="{Binding MemoryCustomTypes}"
                SelectedValue="{Binding MemoryCustomType, Mode=TwoWay}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock
                            Text="{Binding }"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>
    </StackPanel>
</UserControl>
